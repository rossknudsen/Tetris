<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Init instance variables.

secondsPerMove = 0.5;

timeSinceLastRotation = 0;

draw_set_colour(c_purple);

title = "TETRIS";
draw_set_font(fntDigitalLarge);
titleX = (room_width - string_width(title)) / 2;

instructions = "PRESS R TO START";
draw_set_font(fntDigitalSmall);
instructionsX = (room_width - string_width(instructions)) / 2;

instructionsAlpha = 0.5;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Create new tiles.

// remove any bricks from the room.
with (objBrick)
    instance_destroy();

// check how many falling objects there are on the screen.
if (instance_number(objFallingTileBase) &lt; 10)
{
    // create a new instance somewhere on the screen.
    var xPos = (irandom(10) * 4) * brickSize;
    var yPos = (irandom(5)) * brickSize;
    var tile = instance_create(xPos, yPos, objFallingTileBase);
    tile.sprite_index = scrGetNextBrick();
    
    with (tile)
    {
        // if we are already colliding with another instance then just destroy ourselves.
        if (position_meeting(x, y, all))
            instance_destroy();
    }
}

// the time since the last move in seconds.
timeSinceLastRotation += delta_time / 1000000;

// we calculate the alpha value for the instructions to make it pulse.
if (timeSinceLastRotation &lt; 0.5)
    instructionsAlpha = 0.5 + timeSinceLastRotation;
else if (0.5 &lt;= timeSinceLastRotation &amp;&amp; timeSinceLastRotation &lt; 1)
    instructionsAlpha = 1 - (timeSinceLastRotation - 0.5); 
if (instructionsAlpha &gt; 1)
    instructionsAlpha = 1;

if (timeSinceLastRotation &gt; 1)
{
    timeSinceLastRotation = 0;
    
    // select a random tile and try to rotate it.
    var tileCount = instance_number(objFallingTileBase);
    with (instance_find(objFallingTileBase, irandom(tileCount)))
    {
        var originalIndex = image_index;
        image_index += power(-1, irandom(1) + 1);
        if (position_meeting(x, y, all))
            image_index = originalIndex;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw the title.

draw_set_font(fntDigitalLarge);
draw_text(titleX, 150, title);

draw_set_font(fntDigitalSmall);
draw_text_colour(instructionsX, 250, instructions, 
    c_purple, c_purple, c_purple, c_purple, instructionsAlpha);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="82">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Goto the play room.

room_goto(rmPlay);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
