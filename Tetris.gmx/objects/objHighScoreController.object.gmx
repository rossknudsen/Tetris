<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialise stuff.

// set the font to use.
draw_set_colour(c_blue);

// prepare the title stuff for the GUI event.
title = "HIGH SCORES";
draw_set_font(fntDigitalLarge);
var titleWidth = string_width(title);
titleX = (room_width - titleWidth) / 2;

leftX = 100;
rightX = 430;

// prepare the instructions for the GUI event.
instructions = "PRESS R TO RESTART";
draw_set_font(fntDigitalSmall);
instructionsX = (room_width - string_width(instructions)) / 2;

// these variables are used to manage the pulsing of the instructions.
timeChange = 0;
instructionsAlpha = 0.5;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Track the time and update the alpha for the instructions.

// we change the alpha value of the instructions up and down over one second.
timeChange += delta_time / 1000000;
if (timeChange &lt; 0.5)
    instructionsAlpha = 0.5 + timeChange;
else if (0.5 &lt;= timeChange &amp;&amp; timeChange &lt; 1)
    instructionsAlpha = 1 - (timeChange - 0.5);
else
    timeChange = 0;
    
if (instructionsAlpha &gt; 1)
    instructionsAlpha = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw the high scores.

var yPos = 5;

// add room title.
draw_set_font(fntDigitalLarge);
draw_text(titleX, yPos, title);

// add the high scores to the screen.
yPos = 125;
for (scoreIndex = 1; scoreIndex &lt;= 5; scoreIndex++)
{
    var name = highscore_name(scoreIndex);
    if (name == "&lt;nobody&gt;")
        name = "___";
    var value = highscore_value(scoreIndex);
    
    // display the high score.
    draw_text(leftX, yPos, name + " " + string_format(value, 4, 0));
    
    yPos += 60;
}

yPos = 125;
for (scoreIndex = 6; scoreIndex &lt;= 10; scoreIndex++)
{
    var name = highscore_name(scoreIndex);
    if (name == "&lt;nobody&gt;")
        name = "___";
    var value = highscore_value(scoreIndex);
    
    // display the high score.
    draw_text(rightX, yPos, name + " " + string_format(value, 4, 0));
    
    yPos += 60;
}

// draw the instructions on the screen.
draw_set_font(fntDigitalSmall);
draw_text_colour(instructionsX, 80, instructions, 
    c_blue, c_blue, c_blue, c_blue, instructionsAlpha);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="82">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Goto the play room.

room_goto(rmPlay);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
